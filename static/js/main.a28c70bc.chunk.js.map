{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginbottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","console","log","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a28c70bc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth(); \r\nexport const dbService = firebase.firestore();\r\nexport const storageService =firebase.storage();","import { authService,firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const[email,setEmail] =useState(\"\");\r\n    const [password,setPassword] =useState(\"\");\r\n    const [newAccount,setAccount] =useState(true);\r\n    const [error,setError] =useState(\"\");\r\n\r\n    const onChange =(event) =>{\r\n      const {\r\n          target:{name,value},\r\n      } = event;\r\n      if (name===\"email\") {\r\n          setEmail(value);\r\n      }else if (name===\"password\"){\r\n          setPassword(value);\r\n      }\r\n    };\r\n\r\n    const onSubmit =async(event) =>{\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n        \r\n        if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(email,password);\r\n\r\n        }else{\r\n            data = await authService.signInWithEmailAndPassword(email,password);\r\n            \r\n        }\r\n    \r\n\r\n    }catch (error) {\r\n        setError(error.message);\r\n    }\r\n    };\r\n    \r\n    const toggleAccount = () => setAccount((prev)=> !prev);\r\n    const onSocialClick =async(event) =>{\r\n       const {\r\n           target : {name},\r\n       } = event;\r\n       let provider;\r\n       if(name===\"google\"){\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       }else if (name===\"github\"){\r\n           provider = new firebaseInstance.auth.GithubAuthProvider();\r\n       }\r\n       const data = await authService.signInWithPopup(provider);\r\n      \r\n    };\r\nreturn(\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n        name=\"email\"\r\n        type=\"text\"\r\n         placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange} \r\n          className=\"authInput\"\r\n          />\r\n\r\n          <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n         placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\" />\r\n        \r\n        <input type=\"submit\" value={newAccount ? \"Create Account\":\"Log In \"} \r\n        className = \"authInput authSubmit\"\r\n        />\r\n    \r\n        {error && <span className = \"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\" >\r\n            {newAccount ? \"sign In\" :\"Create Account\"}\r\n            </span>\r\n\r\n</>\r\n);\r\n};\r\nexport default AuthForm;","import{FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n     faTwitter,\r\n     faGoogle,\r\n     faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService,firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\"; \r\n\r\nconst Auth = () => {\r\n    const onSocialClick =async(event) =>{\r\n       const {\r\n           target : {name},\r\n       } = event;\r\n       let provider;\r\n       if(name===\"google\"){\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       }else if (name===\"github\"){\r\n           provider = new firebaseInstance.auth.GithubAuthProvider();\r\n       }\r\n       const data = await authService.signInWithPopup(provider);\r\n\r\n    };\r\nreturn(\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n            icon={faTwitter}\r\n            color={\"#04AAFF\"}\r\n            size=\"4x\"\r\n            style={{marginbottom:30}}\r\n        />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\"  className=\"authBtns\">\r\n                Continue with Google <FontAwesomeIcon icon ={faGoogle} />\r\n                </button>\r\n            <button onClick={onSocialClick} name=\"github\"  className=\"authBtns\">\r\n                Continue with Github <FontAwesomeIcon icon ={faGithub} />\r\n                </button>\r\n        </div>\r\n    </div>\r\n   \r\n);\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash,faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    console.log(ok);\r\n\r\n    if (ok) {\r\n     \r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input onChange={onChange} value={newNweet} required placeholder=\"Edit your nweet\"\r\n            autoFocus\r\n            className=\"formInput\" />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancleBtn\">Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweets__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n          \r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n\r\n              </span>\r\n              </div>\r\n          \r\n           \r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import { dbService,storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\" ;\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus,faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const[nweet,setNweet] = useState(\"\");\r\n    const [attachment,setAttachment] =useState(\"\");\r\n  \r\n    const onSubmit = async(event) => {\r\n\r\n        event.preventDefault();\r\n        if (nweet===\"\"){\r\n            return;\r\n        }\r\n        let attachmentUrl =\"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n        await dbService.collection(\"nweets\").add({\r\n            text:nweet,\r\n            createdAt: Date.now(),\r\n            creatorId :userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\"); \r\n    };\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target:{value},\r\n        } =event;\r\n        setNweet(value);  \r\n};\r\n\r\n\r\nconst onFileChange =(event) => {\r\n   const {\r\n       target: {files},\r\n   } = event;\r\n   const theFile = files[0];\r\n   const reader = new FileReader();\r\n   reader.onloadend = (finishedEvent) => {\r\n       const {\r\n           currentTarget:{result},\r\n       } =finishedEvent;\r\n       setAttachment(result);\r\n};\r\n   reader.readAsDataURL(theFile);\r\n\r\n   \r\n};\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    \r\n\r\n\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n            <input \r\n            className=\"factoryInput__input\"\r\n            value ={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"오늘은 어땠어요?\"\r\n            maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\" >\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon ={faPlus} />\r\n            </label>\r\n            <input \r\n            id=\"attach-file\"\r\n            type=\"file\" \r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n                opacity:0,\r\n            }}\r\n            />\r\n            {attachment&&(\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img src ={attachment} \r\n                    style={{\r\n                        backgroundImage:attachment,\r\n                    \r\n                    }}/>\r\n                    <div className = \"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon ={faTimes} />\r\n                    </div>\r\n                   </div>\r\n            \r\n            )}\r\n            \r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService} from \"fbase\";\r\nimport { useEffect,useState } from \"react\";\r\nimport  Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home=({userObj})=>{\r\n    \r\n    const [nweets,setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n       dbService.collection(\"nweets\").onSnapshot((snapshot)=>{\r\n           const newArray = snapshot.docs.map((document) => ({\r\n               id : document.id,\r\n               ...document.data(),\r\n              \r\n           }));\r\n           setNweets(newArray);\r\n       });\r\n     \r\n    },[]);\r\n    \r\n  \r\nreturn (\r\n    <div className =\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style ={{marginTop:30}}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import { ENETDOWN } from \"constants\";\r\nimport { authService,dbService } from \"fbase\";\r\nimport {useState,useEffect} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nconst Profile=({userObj,refreshUser})=>{\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName)\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\nconst onChange = (event) => {\r\n    const {\r\n        target:{ value },\r\n    } = event;\r\n\r\n    setNewDisplayName(value);\r\n};\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName:newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input onChange={onChange}\r\n            type=\"text\"\r\n             placeholder=\"Display name\"\r\n             value={newDisplayName}\r\n             autoFocus\r\n             className=\"FormInput\"\r\n             />\r\n                                                                                        \r\n            <input type=\"submit\" placeholder=\"Update Profile\" className=\"formBtn\"style={{marginTop:10,}} />\r\n        </form>\r\n        <span className=\"formBtn cancleBtn logout\" onClick ={onLogOutClick}>Log Out</span>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;","import {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nconst Navigation = ({userObj}) => {\r\n    return <nav>\r\n        <ul style ={{display:\"flex\",justifyContent:\"center\",marginTop:50}}>\r\n            <li>\r\n                <Link to=\"/\"style={{marginRight:10}}>\r\n                    <FontAwesomeIcon icon ={faTwitter} color={\"#04AFF\"} size=\"2x\"/>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to =\"/profile\" \r\n                style={{\r\n                    marginLeft:10,\r\n                    display:\"flex\",\r\n                    flexDirection:\"column\",\r\n                    alignItems:\"center\",\r\n                    fontSize:12,\r\n                }}\r\n                ><FontAwesomeIcon icon={faUser} color={\"#04AFF\"} size=\"2x\" />\r\n                <span style ={{marginTop:10}}>\r\n                    {userObj.displayName\r\n                    ?`${userObj.displayName}의 Profile`:\"Profile\"}\r\n                </span>\r\n\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n}\r\n\r\nexport default Navigation;","import { HashRouter as Router,Route,Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\"\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter=({isLoggedIn, userObj,refreshUser})=>{\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n          <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                    style={{\r\n                        maxWidth:890,\r\n                        width:\"100%\",\r\n                        margin:\"0 auto\",\r\n                        marginTop:80,\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\"\r\n                    }}\r\n                    >\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj ={userObj} />\r\n                        </Route>\r\n\r\n                        <Route  exact path =\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                            </Route>\r\n                            </div>\r\n                ) : (\r\n                    <Route exact path=\"/\" >\r\n                        <Auth />\r\n                        </Route>\r\n\r\n)}\r\n      </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import {  useEffect,useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n \n  const [init,setInit] =useState(false)\n  const [userObj,setUserObj] = useState(null);\n  useEffect(()=>{\n  authService.onAuthStateChanged((user)=>{\n  if(user){\n    \n    setUserObj({\n      uid:user.uid,\n      displayName:user.displayName,\n      updateProfile:(args) => user.updateProfile(args),\n    });\n  }else {\n    setUserObj(false);\n  }\n  setInit(true);\n});\n  },[]);\nconst refreshUser = () =>{\n\n const user = authService.currentUser;\n setUserObj({\n   uid:user.uid,\n   displayName:user.displayName,\n   updateProfile:(args) =>user.updateProfile(args),\n });\n};\n\n  return (\n    <>\n    {init ? (\n    <AppRouter \n    refreshUser={refreshUser}\n    isLoggedIn ={Boolean(userObj)} userObj = {userObj} />\n    ):(\n      \"initalizing...\"\n    )}\n     \n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\n\nReactDOM.render(\n<React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}