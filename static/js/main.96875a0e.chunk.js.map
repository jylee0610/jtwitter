{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96875a0e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth(); \r\nexport const dbService = firebase.firestore();\r\nexport const storageService =firebase.storage();","import { authService,firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const[email,setEmail] =useState(\"\");\r\n    const [password,setPassword] =useState(\"\");\r\n    const [newAccount,setAccount] =useState(true);\r\n    const [error,setError] =useState(\"\");\r\n\r\n    const onChange =(event) =>{\r\n      const {\r\n          target:{name,value},\r\n      } = event;\r\n      if (name===\"email\") {\r\n          setEmail(value);\r\n      }else if (name===\"password\"){\r\n          setPassword(value);\r\n      }\r\n    };\r\n\r\n    const onSubmit =async(event) =>{\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n        \r\n        if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(email,password);\r\n\r\n        }else{\r\n            data = await authService.signInWithEmailAndPassword(email,password);\r\n            \r\n        }\r\n    \r\n\r\n    }catch (error) {\r\n        setError(error.message);\r\n    }\r\n    };\r\n    \r\n    const toggleAccount = () => setAccount((prev)=> !prev);\r\n    const onSocialClick =async(event) =>{\r\n       const {\r\n           target : {name},\r\n       } = event;\r\n       let provider;\r\n       if(name===\"google\"){\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       }else if (name===\"github\"){\r\n           provider = new firebaseInstance.auth.GithubAuthProvider();\r\n       }\r\n       const data = await authService.signInWithPopup(provider);\r\n      \r\n    };\r\nreturn(\r\n    <>\r\n        <form onSubmit={onSubmit}>\r\n        <input\r\n        name=\"email\"\r\n        type=\"text\"\r\n         placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange} \r\n          />\r\n\r\n          <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n         placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange} />\r\n        \r\n        <input type=\"submit\" value={newAccount ? \"Create Account\":\"Log In \"} />\r\n    \r\n        {error}\r\n        </form>\r\n        <span onClick={toggleAccount} >\r\n            {newAccount ? \"sign In\" :\"Create Account\"}\r\n            </span>\r\n\r\n</>\r\n);\r\n};\r\nexport default AuthForm;","import { authService,firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\"; \r\nconst Auth = () => {\r\n    const onSocialClick =async(event) =>{\r\n       const {\r\n           target : {name},\r\n       } = event;\r\n       let provider;\r\n       if(name===\"google\"){\r\n           provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n       }else if (name===\"github\"){\r\n           provider = new firebaseInstance.auth.GithubAuthProvider();\r\n       }\r\n       const data = await authService.signInWithPopup(provider);\r\n       console.log(data);\r\n    \r\n    };\r\nreturn(\r\n    <div>\r\n        <AuthForm />\r\n        <div>\r\n            <button onClick={onSocialClick} name=\"google\">\r\n                Continue with Google\r\n                </button>\r\n            <button onClick={onSocialClick} name=\"github\">\r\n                Continue with Github\r\n                </button>\r\n        </div>\r\n    </div>\r\n   \r\n);\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    console.log(ok);\r\n\r\n    if (ok) {\r\n     \r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newNweet} required />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import { dbService,storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\" ;\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const[nweet,setNweet] = useState(\"\");\r\n    const [attachment,setAttachment] =useState(\"\");\r\n  \r\n    const onSubmit = async(event) => {\r\n\r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n        await dbService.collection(\"nweets\").add({\r\n            text:nweet,\r\n            createdAt: Date.now(),\r\n            creatorId :userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\"); \r\n    };\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target:{value},\r\n        } =event;\r\n        setNweet(value);  \r\n};\r\n\r\n\r\nconst onFileChange =(event) => {\r\n   const {\r\n       target: {files},\r\n   } = event;\r\n   const theFile = files[0];\r\n   const reader = new FileReader();\r\n   reader.onloadend = (finishedEvent) => {\r\n       const {\r\n           currentTarget:{result},\r\n       } =finishedEvent;\r\n       setAttachment(result);\r\n};\r\n   reader.readAsDataURL(theFile);\r\n\r\n   \r\n};\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    \r\n\r\n\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n            value ={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"오늘은 어땠어요?\"\r\n            maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange ={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment&&(\r\n                <div>\r\n                    <img src ={attachment} width= \"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n            \r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService} from \"fbase\";\r\nimport { useEffect,useState } from \"react\";\r\nimport  Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home=({userObj})=>{\r\n    \r\n    const [nweets,setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n       dbService.collection(\"nweets\").onSnapshot((snapshot)=>{\r\n           const newArray = snapshot.docs.map((document) => ({\r\n               id : document.id,\r\n               ...document.data(),\r\n              \r\n           }));\r\n           setNweets(newArray);\r\n       });\r\n     \r\n    },[]);\r\n    \r\n  \r\nreturn (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;","import { ENETDOWN } from \"constants\";\r\nimport { authService,dbService } from \"fbase\";\r\nimport {useState,useEffect} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nconst Profile=({userObj,refreshUser})=>{\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName)\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\nconst onChange = (event) => {\r\n    const {\r\n        target:{ value },\r\n    } = event;\r\n\r\n    setNewDisplayName(value);\r\n};\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName:newDisplayName});\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input onChange={onChange}\r\n            type=\"text\"\r\n             placeholder=\"Display name\"\r\n             value={newDisplayName} />\r\n                                                                                        \r\n            <input type=\"submit\" placeholder=\"Update Profile\" />\r\n        </form>\r\n        <button onClick ={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;","import {Link} from \"react-router-dom\";\r\nconst Navigation = ({userObj}) => {\r\n    return <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to =\"/profile\">{userObj.displayName}의 Profile</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n}\r\n\r\nexport default Navigation;","import { HashRouter as Router,Route,Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\"\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter=({isLoggedIn, userObj,refreshUser})=>{\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n          <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj ={userObj} />\r\n                        </Route>\r\n\r\n                        <Route  exact path =\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                            </Route>\r\n                            </>\r\n                ) : (\r\n                    <Route exact path=\"/\" >\r\n                        <Auth />\r\n                        </Route>\r\n\r\n)}\r\n\r\n      </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import {  useEffect,useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n \n  const [init,setInit] =useState(false)\n  const [userObj,setUserObj] = useState(null);\n  useEffect(()=>{\n  authService.onAuthStateChanged((user)=>{\n  if(user){\n    \n    setUserObj({\n      uid:user.uid,\n      displayName:user.displayName,\n      updateProfile:(args) => user.updateProfile(args),\n    });\n  }else {\n    setUserObj(false);\n  }\n  setInit(true);\n});\n  },[]);\nconst refreshUser = () =>{\n\n const user = authService.currentUser;\n setUserObj({\n   uid:user.uid,\n   displayName:user.displayName,\n   updateProfile:(args) =>user.updateProfile(args),\n });\n};\n\n  return (\n    <>\n    {init ? (\n    <AppRouter \n    refreshUser={refreshUser}\n    isLoggedIn ={Boolean(userObj)} userObj = {userObj} />\n    ):(\n      \"initalizing...\"\n    )}\n     \n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\n\nReactDOM.render(\n<React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}